AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'user-management-app

  SAM template defining a single Lambda handler for all endpoints, preserving existing
  functionality for users, weather, and places.

  '
Globals:
  Function:
    Timeout: 10
    Runtime: nodejs18.x
    Architectures:
    - x86_64
    MemorySize: 1024
    Environment:
      Variables:
        FIREBASE_API_KEY_NAME: /weatherapp/FIREBASE_API_KEY
        FIREBASE_AUTH_DOMAIN_NAME: /weatherapp/FIREBASE_AUTH_DOMAIN
        FIREBASE_DATABASE_URL_NAME: /weatherapp/FIREBASE_DATABASE_URL
        FIREBASE_PROJECT_ID_NAME: /weatherapp/FIREBASE_PROJECT_ID
        FIREBASE_STORAGE_BUCKET_NAME: /weatherapp/FIREBASE_STORAGE_BUCKET
        FIREBASE_MESSAGING_SENDER_ID_NAME: /weatherapp/FIREBASE_MESSAGING_SENDER_ID
        FIREBASE_APP_ID_NAME: /weatherapp/FIREBASE_APP_ID
        OPENWEATHERMAP_API_KEY_NAME: /weatherapp/OPENWEATHERMAP_API_KEY
        GEOAPIFY_API_KEY_NAME: /weatherapp/GEOAPIFY_API_KEY
Resources:
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors:
        AllowMethods: '''GET,POST,PUT,DELETE,OPTIONS'''
        AllowHeaders: '''*'''
        AllowOrigin: '''*'''
      GatewayResponses:
        DEFAULT_4XX:
          ResponseParameters:
            Headers:
              Access-Control-Allow-Origin: '''*'''
              Access-Control-Allow-Headers: '''*'''
              Access-Control-Allow-Methods: '''GET,POST,PUT,DELETE,OPTIONS'''
        DEFAULT_5XX:
          ResponseParameters:
            Headers:
              Access-Control-Allow-Origin: '''*'''
              Access-Control-Allow-Headers: '''*'''
              Access-Control-Allow-Methods: '''GET,POST,PUT,DELETE,OPTIONS'''
  UsersCreateFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: UsersCreateFunction
      Handler: handlers/users.createUser
      Policies:
      - AmazonSSMReadOnlyAccess
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGatewayApi
            Path: /api/users
            Method: post
    Metadata:
      SamResourceId: UsersCreateFunction
  UsersListFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: UsersListFunction
      Handler: handlers/users.listUsers
      Policies:
      - AmazonSSMReadOnlyAccess
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGatewayApi
            Path: /api/users
            Method: get
    Metadata:
      SamResourceId: UsersListFunction
  UsersGetByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: UsersGetByIdFunction
      Handler: handlers/users.getUserById
      Policies:
      - AmazonSSMReadOnlyAccess
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGatewayApi
            Path: /api/users/{id}
            Method: get
    Metadata:
      SamResourceId: UsersGetByIdFunction
  UsersUpdateFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: UsersUpdateFunction
      Handler: handlers/users.updateUser
      Policies:
      - AmazonSSMReadOnlyAccess
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGatewayApi
            Path: /api/users/{id}
            Method: put
    Metadata:
      SamResourceId: UsersUpdateFunction
  UsersDeleteFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: UsersDeleteFunction
      Handler: handlers/users.deleteUser
      Policies:
      - AmazonSSMReadOnlyAccess
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGatewayApi
            Path: /api/users/{id}
            Method: delete
    Metadata:
      SamResourceId: UsersDeleteFunction
  WeatherGetFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: WeatherGetFunction
      Handler: handlers/weather.getWeather
      Policies:
      - AmazonSSMReadOnlyAccess
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGatewayApi
            Path: /api/weather
            Method: get
    Metadata:
      SamResourceId: WeatherGetFunction
  PlacesGetFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: PlacesGetFunction
      Handler: handlers/places.getPlaces
      Policies:
      - AmazonSSMReadOnlyAccess
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGatewayApi
            Path: /api/places
            Method: get
    Metadata:
      SamResourceId: PlacesGetFunction
Outputs:
  ApiUrl:
    Description: API Gateway endpoint URL for Prod stage
    Value:
      Fn::Sub: https://${ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/
